/**
 * @author cheng-alvin
 * @since v0.0.1
 *
 * The x86 instruction set enum and opcode values used for
 * code generation as well as referencing from other locations.
 *
 * @note May not be compatible on 32 and even 16b bit systems, please see
 * external sources for more information.
 */

enum class x86_instruction {
  MOV = 0x8B,
  MOV_BYTE = 0xC6,
  MOV_WORD = 0xC7,
  MOV_DWORD = 0xB8,
  MOV_QWORD = 0xB8,
  MOVSD = 0xF2A5,
  MOVZX = 0x0FB6,
  MOVSX = 0x0FBE,
  XCHG = 0x90,
  XCHG_BYTE = 0x86,
  XCHG_WORD = 0x87,
  XCHG_DWORD = 0x90,
  XCHG_QWORD = 0x90,
  PUSH = 0x50,
  PUSH_BYTE = 0x6A,
  PUSH_WORD = 0x68,
  PUSH_DWORD = 0x68,
  PUSH_QWORD = 0x68,
  POP = 0x58,
  POP_BYTE = 0x8F,
  POP_WORD = 0x8F,
  POP_DWORD = 0x8F,
  POP_QWORD = 0x8F,
  ADD = 0x03,
  ADD_BYTE = 0x80,
  ADD_WORD = 0x81,
  ADD_DWORD = 0x81,
  ADD_QWORD = 0x81,
  ADC = 0x13,
  ADC_BYTE = 0x10,
  ADC_WORD = 0x11,
  ADC_DWORD = 0x11,
  ADC_QWORD = 0x11,
  SUB = 0x2B,
  SUB_BYTE = 0x80,
  SUB_WORD = 0x81,
  SUB_DWORD = 0x81,
  SUB_QWORD = 0x81,
  SBB = 0x1B,
  SBB_BYTE = 0x18,
  SBB_WORD = 0x19,
  SBB_DWORD = 0x19,
  SBB_QWORD = 0x19,
  INC = 0x40,
  DEC = 0x48,
  NEG = 0xF7,
  CMP = 0x3B,
  CMP_BYTE = 0x80,
  CMP_WORD = 0x81,
  CMP_DWORD = 0x81,
  CMP_QWORD = 0x81,
  TEST = 0x85,
  AND = 0x23,
  AND_BYTE = 0x80,
  AND_WORD = 0x81,
  AND_DWORD = 0x81,
  AND_QWORD = 0x81,
  OR = 0x0B,
  OR_BYTE = 0x80,
  OR_WORD = 0x81,
  OR_DWORD = 0x81,
  OR_QWORD = 0x81,
  XOR = 0x33,
  XOR_BYTE = 0x80,
  XOR_WORD = 0x81,
  XOR_DWORD = 0x81,
  XOR_QWORD = 0x81,
  NOT = 0xF7,
  JMP = 0xE9,
  JMP_SHORT = 0xEB,
  CALL = 0xE8,
  CALL_SHORT = 0xE8,
  RET = 0xC3,
  RET_IMM = 0xC2,
  INT = 0xCD,
  MOVS = 0xA4,
  CMPS = 0x3A,
  LODS = 0xAC,
  STOS = 0xAA,
  CLC = 0xF8,
  STC = 0xF9,
  CLI = 0xFA,
  STI = 0xFB,
  LDS = 0xC5,
  LES = 0xC4,
  NOP = 0x90,
  HLT = 0xF4,
  WAIT = 0x9B,
  ESC = 0xD8,
  LOCK = 0xF0
};
